% ========================================================================
% This script reads the simulated data generated by
% Central_IAVGillespie_multiple and it is used to generate the figures 2A
% and 3A-B of the paper Segredo-Otero and Gresham 2025.
% ========================================================================

clear all
close all
clc

current = strcat(pwd,'/Result_03-23-2025_08-14-13');
path = current(end-19:end);
M = 20;
MOIs = 1:M;
NumG = 8;
Rep = 1000;
maxVir = 1e3;
Genomes_store = nan(NumG*Rep,M,M);
Virions_segment_store = nan(NumG*maxVir,Rep,M);
Virions_cycle_store = nan(NumG*maxVir,Rep,M);
Virions_time_store = nan(maxVir,Rep,M);
Fit_store = nan(Rep,M);
Muts_store = nan(Rep,M);

mfrac = zeros(1,M);
vfrac = zeros(1,M);
sIv = zeros(Rep,M);
mFits = zeros(1,M);
vFits = zeros(1,M);

for m = 1:M
    
    Genomes_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Genomes',path,'.csv');
    Virions_segment_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Virs_G',path,'.csv');
    Virions_cycle_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Virs_C',path,'.csv');
    Virions_time_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Virs_time',path,'.csv');
    Fit_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Fit',path,'.csv');
    Muts_name = strcat(current,'/MOI_',num2str(MOIs(m)),'_Muts',path,'.csv');
    
    Genomes = csvread(Genomes_name);
    Genomes_store(:,1:MOIs(m),MOIs(m)) = Genomes;
    Virions_segment = csvread(Virions_segment_name);
    Virions_segment_store(:,:,MOIs(m)) = Virions_segment;
    Virions_cycle = csvread(Virions_cycle_name);
    Virions_cycle_store(:,:,MOIs(m)) = Virions_cycle;
    Virions_time = csvread(Virions_time_name);
    Virions_time_store(:,:,MOIs(m)) = Virions_time;
    Muts = csvread(Muts_name);
    Muts_store(:,MOIs(m)) = Muts;
    Fit = csvread(Fit_name);
    
    Fit = Fit(1,:); 
    Fit(isnan(Fit)) = 0; Fit(Fit == Inf) = 0;  
    
    Fit_store(:,MOIs(m)) = Fit;

end

Muts_store(isnan(Muts_store)) = 0;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Analisys of reordering
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

MOI2 = 1:M;

mFreq = zeros(1,M);
mFrac_F = zeros(1,M);
mRealM = zeros(1,M);
mSuc = zeros(1,M);
mSuc2 = zeros(1,M);
mMajor = zeros(1,M);
mMajor2 = zeros(1,M);
mFreqAll = zeros(M,M);
mFreqVirs = zeros(M,M);
mCycle = zeros(1,M);
mMu = zeros(1,M);
mFit = zeros(1,M);
mMuts = zeros(1,M);
mFreq_R = zeros(1,M);
vFreq = zeros(1,M);
vFrac_F = zeros(1,M);
vRealM = zeros(1,M);
vSuc = zeros(1,M);
vSuc2 = zeros(1,M);
vMajor = zeros(1,M);
vMajor2 = zeros(1,M);
vFreqAll = zeros(M,M);
vFreqVirs = zeros(M,M);
vCycle = zeros(1,M);
vMu = zeros(1,M);
vFit = zeros(1,M);
vMuts = zeros(1,M);
vFreq_R = zeros(1,M);
al = 8.1e-5/6;
Genome_length = [2320 2320 2211 1757 1540 1392 1005 868];
CIMu = zeros(2,M);

for m = 1:M  

    Genomes1 = reshape(Genomes_store(:,1:m,m),NumG,m,Rep);
    Fit = Fit_store(:,m);
    Virions_segment = reshape(Virions_segment_store(:,:,MOIs(m)),NumG,maxVir,Rep);
    Virions_cycle = reshape(Virions_cycle_store(:,:,MOIs(m)),NumG,maxVir,Rep);
    Virions_time = Virions_time_store(:,:,MOIs(m));
    Muts = Muts_store(:,MOIs(m));

    Freqs = zeros(1,Rep);
    Frac_F = zeros(1,Rep);
    Suc = zeros(1,Rep);
    Major = zeros(1,Rep);
    Major2 = zeros(1,Rep);
    FreqAll = zeros(M,Rep);
    FreqVirs = zeros(M,Rep);
    RealM = zeros(1,Rep);
    Freqs_R = zeros(1,Rep);
    Suc2 = zeros(1,Rep);
    Cycle = zeros(1,Rep);
    Mu = zeros(1,Rep);
    
        for rep = 1:Rep
        
            Gens = Genomes1(:,:,rep);
            Gen_I = sum(Gens > 0,1); Gen_I(Gen_I > 1) = 1;
            
            if Fit(rep) > 0
                
                lV = find(Virions_time(:,rep));

                Frac_G = Virions_segment(:,lV,rep);
                Frac_C = Virions_cycle(:,lV,rep);
                Mj = zeros(1,NumG);
                
                for I = 1:NumG
                    f = Frac_G(I,:); f(f == 0) = [];
                    uf = unique(f); a = 1;
                    for u = 1:length(uf)
                        b = length(find(uf(u) == f));
                        if b > a; a = b; end
                    end
                    Mj(1,I) = a/length(f);
                end
                Mj(Mj == Inf) = [];
                U = unique(Frac_G); U(U == 0) = [];
                frac_virs = histcounts(Frac_G, 1:M+1);
                frac_virs = sort(frac_virs./sum(frac_virs,2),2,'descend');
                Suc(1,rep) = mean(Gen_I);
                Suc2(1,rep) = length(U)/m;
                Major(1,rep) = mean(max(Gens./sum(Gens,2),[],2));
                Major2(1,rep) = nanmean(Mj);
                RealM(1,rep) = sum(Gen_I);
                A = mean(sort(Gens./sum(Gens,2),2,'descend'));
                if m < M
                    FreqAll(1:m,rep) = A;
                else
                    FreqAll(:,rep) = A;                    
                end
                FreqVirs(:,rep) = frac_virs;
               
                if mod(m,2) == 0

                    Recomb = Frac_G;
                    Recomb(Recomb == 0) = 1;
                    Recomb(Recomb < m/2+1) = 1;
                    Recomb(Recomb >= m/2+1) = 2;
                    Unique = Recomb(:,1) == Recomb;
                    Freqs_R(1,rep) = 1-mean(prod(Unique,1));

                end

                Frac_GF = Frac_G > 0;
                Frac_F(1,rep) = mean(prod(Frac_GF,1));
                Cycle(1,rep) = mean(Frac_C(Frac_C>0),1);
                Mu(1,rep) = mean(sum(poissrnd(al.*Frac_C'.*Genome_length),2));
            else
                
            end
    
        end
    
    t_value = tinv(0.975, Rep - 1); % valor crítico de t para 95% CI y Rep-1 grados de libertad
    
    mFreq(1,m) = mean(Fit>1);
    vFreq(1,m) = sqrt(var(Fit>1))/sqrt(Rep);

    Cycle(find(Fit == 0)) = [];
    Mu(find(Fit == 0)) = [];
    Frac_F(find(Fit == 0)) = [];
    Major(find(Fit == 0)) = [];
    Major2(find(Fit == 0)) = [];
    FreqAll(:,find(Fit == 0)) = [];
    FreqVirs(:,find(Fit == 0)) = [];
    Suc(find(Fit == 0)) = [];
    Suc2(find(Fit == 0)) = [];
    RealM(find(Fit == 0)) = [];
    Freqs_R(find(Fit == 0)) = [];
    Muts(find(Fit == 0)) = [];
    Fit(find(Fit == 0)) = [];
    
    mFit(1,m) = mean(Fit);
    vFit(1,m) = sqrt(var(Fit));
    
    mRealM(1,m) = mean(RealM);
    vRealM(1,m) = sqrt(var(RealM))/sqrt(Rep);
    mFreq_R(1,m) = mean(Freqs_R);
    vFreq_R(1,m) = t_value * sqrt(var(Freqs_R)/Rep); % CI95% half-width
    mSuc(1,m) = mean(Suc);
    vSuc(1,m) = sqrt(nanvar(Suc))/sqrt(Rep);
    mSuc2(1,m) = mean(Suc2);
    vSuc2(1,m) = sqrt(nanvar(Suc2))/sqrt(Rep);
    mMajor(1,m) = nanmean(Major);
    mMajor2(1,m) = nanmean(Major2);
    mFreqAll(:,m) = nanmean(FreqAll');
    mFreqVirs(:,m) = nanmean(FreqVirs');
    vMajor(1,m) = sqrt(nanvar(Major))/sqrt(Rep);
    vMajor2(1,m) = sqrt(nanvar(Major2))/sqrt(Rep);
    vFreqAll(:,m) = sqrt(nanvar(FreqAll'))/sqrt(Rep);
    vFreqVirs(:,m) = sqrt(nanvar(FreqVirs'))/sqrt(Rep);
    mFrac_F(1,m) = nanmean(Frac_F);
    vFrac_F(1,m) = sqrt(nanvar(Frac_F))/sqrt(Rep);
    mCycle(1,m) = mean(Cycle);
    vCycle(1,m) = sqrt(var(Cycle))/sqrt(Rep);
    mMu(1,m) = mean(Mu);
    vMu(1,m) = t_value * sqrt(var(Mu)/Rep); % CI95% half-width
    mMuts(1,m) = mean(Muts);
    vMuts(1,m) = sqrt(var(Muts));
    

end
%%

figure
% --- BARS MOI 1‑10 (MODEL) --------------------------------------
hModel = bar(MOI2(1,1:10), mFreq_R(v2), ...
             'FaceColor',[0.30 0.60 0.90]);   % blue → “Model”
hold on

% --- ERROR BARS (excluded from legend) --------------------------
hErr = errorbar(MOI2(1,1:10), mFreq_R(1,v2), vFreq_R(1,v2), ...
                '.k', 'HandleVisibility','off');  % exclude from legend

% --- TWO EXTRA BARS ---------------------------------------------
xExtra = 11;                % position to the right
% hTransversions = bar(xExtra(2), 1-0.0079, ...
%             'FaceColor',[0.20 0.80 0.20]);     % green → “Null case”
hTranitions = bar(xExtra(1), 0.927, ...
             'FaceColor',[0.90 0.20 0.20]);     % red → “Experimental”

% --- AXES AND FORMATTING ----------------------------------------
set(gca,'YLim',[0 1],'XLim',[0 12])
xticks([MOI2(1,1:11)])
xticklabels([num2cell(MOI2(1,1:10)) {'Exp'}])
xlabel('Virions per variant');  ylabel('Frequency per genome')
title('Figure 3A')
xtickangle(0)

ax = gca;
ax.FontSize = 15;

% --- LEGEND -----------------------------------------------------
% legend([hModel hTranitions], ... % hTransversions], ...         % only these 3 objects
%        {'Model','Experimental'}, ... %'Null case'}, ...
%        'Location','southoutside', ...
%        'Orientation','horizontal', ...
%        'FontSize',15, ...
%        'Box','off');


%%
Freq_ini = zeros(10,10);

for m = 1:M/2
    Freq_ini(1:m,m) = 1/m;
end

% --- DATA PREPARATION ------------------------------------------
mFreqAll1 = mFreqAll(1:10,1:10);
nSegs    = size(mFreqAll1,1);
nSamples = 10;

% Color palette
cmap = turbo(nSegs);
idx = flip(1:10); idx(1) = 2; idx(9) = 10;
cmap = cmap(idx, :);

% --- INTERLEAVED MATRIX: Freq_ini | mFreqAll1 | NaN | NaN ------
step = 8;  % columns per sample
inter = NaN(nSegs, step*nSamples);
x_freq  = step*(0:nSamples-1) + 1;   % columns for Freq_ini
x_mfreq = x_freq + 5;                % columns for mFreqAll1

inter(:, x_freq)  = Freq_ini(:,1:nSamples);
inter(:, x_mfreq) = mFreqAll1(:,1:nSamples);

% --- PLOT -------------------------------------------------------
figure
ax = axes();
ax.ColorOrder = cmap;
hold(ax, 'on')

hBar = bar(ax, inter', 'stacked');
set(hBar, 'BarWidth', 1.3)

% --- TRANSITION AREAS BETWEEN BARS ------------------------------
offset = 0.65;

for i = 1:nSamples
    x1 = x_freq(i);    % column of Freq_ini
    x2 = x_mfreq(i);   % column of mFreqAll1

    x1_edge = x1 + offset;  % right edge
    x2_edge = x2 - offset;  % left edge

    y0_ini = 0;
    y0_obs = 0;

    for s = 1:nSegs
        h_ini = Freq_ini(s,i);
        h_obs = mFreqAll1(s,i);

        y1_ini = y0_ini + h_ini;
        y1_obs = y0_obs + h_obs;

        % Coordinates of the transition area (quadrilateral)
        x_fill = [x1_edge, x2_edge, x2_edge, x1_edge];
        y_fill = [y0_ini, y0_obs, y1_obs, y1_ini];

        fill(x_fill, y_fill, cmap(s,:), ...
             'EdgeColor','none', 'FaceAlpha', 0.5);

        y0_ini = y1_ini;
        y0_obs = y1_obs;
    end
end

% --- AXES AND LABELS --------------------------------------------
ax.YLim = [0 1];
ax.XLim = [7 step*nSamples + 1];  % extend if needed
ax.FontSize = 20;

% Center x-ticks between each bar pair
xticks((x_freq + x_mfreq) / 2);
xticklabels(1:nSamples);

xlabel('MOI');
ylabel('Segment frequency');
title('Figure 2A')

% --- LEGEND -----------------------------------------------------
% legLabels = arrayfun(@(s) sprintf('Virion %d',s), 1:nSegs, 'uni',0);
% legend(legLabels, ...
%        'Location','southoutside', ...
%        'Orientation','horizontal', ...
%        'NumColumns',5, ...
%        'FontSize',10, ...
%        'Box','off');


%%
figure
% --- BARS MOI 1‑10 (MODEL) ---------------------------------------
hModel = bar(MOI2(1,1:10), mMu(1,1:10), ...
             'FaceColor',[0.30 0.60 0.90]);   % blue → “Model”
hold on

% --- ERROR BARS (excluded from legend) --------------------------
hErr = errorbar(MOI2(1,1:10), mMu(1,1:10), vMu(1,1:10), ...
                '.k', 'HandleVisibility','off');  % exclude from legend

% --- THREE EXTRA BARS -------------------------------------------
xExtra = [11 12 13];  % additional bar positions to the right

hTot = bar(xExtra(1), 1.8e-4 .* sum(Genome_length), ...
           'FaceColor','r');       % red → “Total observed”

% hTransversions = bar(xExtra(2), 8.44e-5, ...
%            'FaceColor','r');     % red → “Transversions”
% hTransitions   = bar(xExtra(3), 2.28e-4, ...
%            'FaceColor','g');     % green → “Transitions”

% --- AXES AND FORMATTING ----------------------------------------
set(gca, 'YLim', [0 3], 'XLim', [0 12])
xticks([MOI2(1,1:11)])
xticklabels([num2cell(MOI2(1,1:10)) {'Exp'}])
xlabel('MOI');
ylabel('Mutation rate per genome')
xtickangle(0)
title('Figure 3B')

ax = gca;
ax.FontSize = 15;
